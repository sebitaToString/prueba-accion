
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #{nameapp}#
  namespace: #{ns}#
spec:
  replicas: 1
  selector:
    matchLabels:
      app: #{nameapp}#
  template:
    metadata:
      labels:
        app: #{nameapp}#
    spec:
      containers:
      - name: #{nameapp}#
        image: #{urlregistry}#:__buildid__
        env: 
        - name: #{TEST}#
          value: #{servidor_db}#
        - name: usuario_db
          value: #{usuario_db}#
        - name: KEYIV
          value: __KEYIV__
        - name: nombre_db
          value: #{nombre_db}#
        - name: pass_usuario_db
          value: #{pass_usuario_db}#
        imagePullPolicy: IfNotPresent   
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "300m"
      imagePullSecrets:
      - name: secretoacr

---
# Crear servicio
apiVersion: v1
kind: Service
metadata:
  name: #{nameapp}#svc
  namespace: #{ns}#
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: #{nameapp}#

--- 
# Crear regla Ingress
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: #{nameapp}#rules
  namespace: #{ns}#
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
spec:
  rules:
  - host:  #{host-api-facturacion}#
    http:
      paths:
      - backend:
          serviceName: #{nameapp}#svc
          servicePort: 80
  tls:
  - hosts:
    - #{host-api-facturacion}#
    secretName: #{host-api-facturacion-secretname}#
